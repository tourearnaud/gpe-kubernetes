name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        options: >-
          --health-cmd='mysqladmin ping --silent'
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    # Étape 1 : Checkout du code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Installer les dépendances pour le front-end
    - name: Install dependencies for React
      run: npm install --prefix front

    # Étape 3 : Construire le front-end
    - name: Build React application
      run: npm run build --prefix front

    # Étape 4 : Installer .NET et restaurer les dépendances du back-end
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0 # Utilise la version de .NET que tu utilises

    - name: Restore .NET dependencies
      run: dotnet restore GPE.sln

    # Étape 5 : Build du projet API
    - name: Build API
      run: dotnet build --no-restore --configuration Release

    # Étape 6 : Configurer la base de données pour les tests
    - name: Apply Migrations
      run: dotnet ef database update --project API

    # Étape 7 : Lancer les tests back-end
    - name: Run back-end tests
      run: dotnet test API.Tests --no-build --configuration Release
      continue-on-error: true # Permet de ne pas bloquer la pipeline si les tests échouent

    # Étape 8 : Lancer les tests front-end
    - name: Run front-end tests
      run: npm test --prefix front
      continue-on-error: true

    # Étape 9 : Déployer sur Hostinger (si applicable)
    - name: Deploy to Hostinger
      env:
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        # Commandes pour transférer les fichiers de build front et back
        echo "Déploiement en cours..."
